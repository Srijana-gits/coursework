install.packages("MASS")
library("MASS")
install.packages("ISLR2")
library("ISLR2")

head(Boston)

#3.6.3 Multiple Linear Regression

## Fit a linear model using all predictors (.) to predict medv
lm.fit <- lm(medv ~ lstat + age, Boston)
summary(lm.fit)

lm.fit <-lm(medv~., data = Boston)
summary(lm.fit)

?summary.lm
summary(lm.fit)$r.sq # gives R square
summary(lm.fit)$sigma #gives RSE


install.packages("car")


# 5. Check for Multicollinearity (VIF)
vif(lm.fit)

#vif() = Variance Inflation Factor
#Tells if any predictor is highly correlated with others
#VIF > 5 or 10 = red flag for multicollinearity

#age has a high p-value.So we may wish to run a regression excluding this predictor.
lm.fit1<-lm(medv ~. -age,Boston) 

# Alternatively,the update()function can be used
lm.fit1 <- update(lm.fit, ~ . - age)




# 3.6.4 Interaction Terms

# shorthand for lstat+age+lstat:age
summary(lm(medv ~ lstat * age, data = Boston))


# perform a regressionof medv on to lstat and lstat2.
lm.fit2 <-lm(medv ~lstat + I(lstat^2), data=Boston)
summary(lm.fit2)





#3.6.5 Non-linearTransformationsof thePredictors

# Fit a quadratic regression model where we predict medv using lstat and lstat^2
lm.fit2 <- lm(medv ~ lstat + I(lstat^2), data = Boston)
summary(lm.fit2)


# The anova() function is comparing two models:
attach(Boston)
lm.fit <- lm(medv ~ lstat)
anova(lm.fit, lm.fit2)

# Set up the graphics window to show 4 plots in a 2x2 grid
par(mfrow = c(2, 2))

# Plot diagnostic plots (residuals, Q-Q plot, etc.) for the quadratic regression model
plot(lm.fit2)

## Fit a 5th-degree polynomial regression model using lstat to predict medv
lm.fit5 <- lm(medv ~ poly(lstat, 5))
summary(lm.fit5)

## Fit a linear regression model using the log of rm (average number of rooms) to predict medv
summary(lm(medv ~ log(rm), data = Boston))




# 3.6.6 Qualitative Predictors
head(Carseats)

# Fit a multiple linear regression model to predict Sales using:
# - All variables (.) in the Carseats dataset
# - Plus the interaction between Income and Advertising
# - Plus the interaction between Price and Agelm.fit <- lm(Sales ~ . + Income:Advertising + Price:Age,
data = Carseats)
summary(lm.fit)

attach(Carseats)
contrasts(ShelveLoc)

